version: '2'

services:

  server:

    image: openslides:latest

    # Below is the default command.  You can uncomment it to override the

    # number of workers, for example:

    # command: "gunicorn -w 8 --preload -b 0.0.0.0:8000

    #   -k uvicorn.workers.UvicornWorker openslides.asgi:application"

    #

    # Uncomment the following line to use daphne instead of gunicorn:

    # command: "daphne -b 0.0.0.0 -p 8000 openslides.asgi:application"

    volumes:

      - type: volume

        source: "personaldata"

        target: "/app/personal_data"

        volume:

          nocopy: true

    depends_on:

      - prioserver

      - postfix

      - postgres

      - redis

      - rediscache

    networks:

      - front

      - back

    environment:

      # With this variable set this service will not attempt to prepare the

      # instance by, e.g., running migations.  This is exclusively left up to

      # the main service to avoid conflicts.

      - SERVER_IS_SECONDARY=1

    secrets:

      - django

  prioserver:

    # This service is basically a simple copy of the main server service

    # (above).  It will share all the same resources (DB, Redis, static files)

    # as the main server, so it is crucial that it is always kept at

    # compatible versions.

    image: openslides:latest

    secrets:

      - django

      - os_admin

      - os_user

    command: "gunicorn -w 1 --preload -b 0.0.0.0:8000

      -k uvicorn.workers.UvicornWorker openslides.asgi:application"

    volumes:

      - type: volume

        source: "staticfiles"

        target: "/app/openslides/static"

        volume:

          nocopy: true

      - type: volume

        source: "personaldata"

        target: "/app/personal_data"

        volume:

          nocopy: true

    depends_on:

      - postfix

      - postgres

      - redis

      - rediscache

    networks:

      - front

      - back

    # environment:

    #  - INSTANCE_IS_READONLY=1

    deploy:

      replicas: 1

  redis:

    image: redis:alpine

    volumes:

      - "redisdata:/data"

    networks:

      - back

    deploy:

      replicas: 1

  rediscache:

    image: redis:alpine

    command: ["redis-server", "--save", ""]

    networks:

      - back

    deploy:

      replicas: 1

  rediscache-slave:

    image: redis:alpine

    command: ["redis-server", "--save", "", "--slaveof", "rediscache", "6379"]

    networks:

      - back

  client:

    image: openslides-proxy:latest

    volumes:

      - type: volume

        source: "staticfiles"

        target: "/usr/share/nginx/html"

        volume:

          nocopy: true

    depends_on:

      - prioserver

    networks:

      - front

    ports:

      - 61000:80

    deploy:

      mode: global

  postgres:

    image: sameersbn/postgresql:10

    labels:

      org.openslides.role: "postgres"

    volumes:

      - "dbdata:/var/lib/postgresql"

    environment:

      - DB_USER=openslides

      - DB_PASS=openslides

      - DB_NAME=openslides

    networks:

      - back

    deploy:

      replicas: 1

      placement:

        constraints: [node.role == manager]

  postfix:

    image: openslides-postfix:latest

    environment:

      - MYHOSTNAME=localhost

      - RELAYHOST=localhost

    networks:

      - back

    deploy:

      replicas: 1

      placement:

        constraints: [node.role == manager]

volumes:

  dbdata:

  redisdata:

  staticfiles:

    driver: local

    driver_opts:

      type: nfs

      o: "addr=nfs.example.com,rw,soft,nolock"

      device: ":/srv/openslides/nfs/staticfiles"

  personaldata:

    driver: local

    driver_opts:

      type: nfs

      o: "addr=nfs.example.com,rw,soft,nolock"

      device: ":/srv/openslides/nfs/personaldata"

networks:

  front:

  back:

    driver_opts:

      encrypted: ""

secrets:

  os_admin:

    file: ./secrets/adminsecret.env

  os_user:

    file: ./secrets/usersecret.env

  django:

    file: ./secrets/django



# vim: set ft=yaml sw=2 et:
